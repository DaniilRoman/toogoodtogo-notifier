name: telegram notify
on:
  workflow_dispatch:
  schedule:
    - cron: '*/5 7-20 * * *'
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Install project
        run: poetry install --no-interaction

      # OpenVPN setup
      - name: Test IP address before setting up VPN
        run: curl ifconfig.me

      - name: Install OpenVPN
        run: sudo apt-get install -y openvpn

      - name: Create credentials.txt
        run: |
          echo "${{ secrets.SURFSHARK_USERNAME }}" > credentials.txt
          echo "${{ secrets.SURFSHARK_PASSWORD }}" >> credentials.txt

      - name: Set up OpenVPN with Surfshark
        run: |
          sudo openvpn --config ./surfshark.ovpn --auth-nocache --auth-user-pass credentials.txt &
        env:
          OVPN_USERNAME: ${{ secrets.SURFSHARK_USERNAME }}
          OVPN_PASSWORD: ${{ secrets.SURFSHARK_PASSWORD }}

      - name: Test connection with VPN
        run: curl ifconfig.me

      # Run script
      - name: Run Python script
        run: poetry run python main.py
        env:
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          TGTG_ACCESS_TOKEN: ${{ secrets.TGTG_ACCESS_TOKEN }}
          TGTG_REFRESH_TOKEN: ${{ secrets.TGTG_REFRESH_TOKEN }}
          TGTG_USER_ID: ${{ secrets.TGTG_USER_ID }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION_NAME: ${{ secrets.AWS_REGION_NAME }}

      # Clean up
      - name: Clean up
        run: |
          sudo killall openvpn